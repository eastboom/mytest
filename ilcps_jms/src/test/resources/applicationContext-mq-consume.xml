<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms.xsd
		http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core.xsd">
	<!-- 
		Spring整合ActiveMQ，实现消息消费
			1. 创建ActiveMQ连接工厂
			2. 创建缓存工厂
			3. 创建监听器
	 -->
	 <!-- 1. 创建ActiveMQ连接工厂 -->
	 <amq:connectionFactory id="amqConnectionFactory"
	 	userName="admin" password="admin" brokerURL="tcp://localhost:61616"></amq:connectionFactory>
	 
	 <!-- 2. 创建缓存工厂 -->
	 <bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
	 	<!-- 注入 连接工厂-->
	 	<property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
	 	<!-- session缓存数目 -->
	 	<property name="sessionCacheSize" value="5"></property>
	 </bean>
	 
	 <!-- 3. 监听器配置 -->
	 <!-- 创建监听器对象 -->
	 <bean id="emailListener" class="cn.itcast.listener.EmailListener"></bean>
	 <bean id="phoneListener" class="cn.itcast.listener.PhoneListener"></bean>
	 
	 <!-- 
		配置消息监听器类，监听队列或主题消息模型中的消息。从而实现消费消息。
		jms:listener-container
			destination-type 监听的JMS消息类型（queue、topic）
			connection-factory Spring的缓存连接工厂
		jms:listener
			destination 对应MQ中队列名称或主题名称
			rel			消息监听器类（实现MessageListener接口）
	 -->
	 <!-- 3.1 监听指定名称(email)的队列中的消息-->
	<jms:listener-container destination-type="queue" connection-factory="cachingConnectionFactory">
		<jms:listener destination="email" ref="emailListener"/>
	</jms:listener-container>
	
	 <!-- 3.2 监听指定名称(email)的主题中的消息 -->
	<jms:listener-container destination-type="topic" connection-factory="cachingConnectionFactory">
		<jms:listener destination="phone" ref="phoneListener"/>
	</jms:listener-container>
</beans>










